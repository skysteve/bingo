{"version":3,"file":null,"sources":["../../tmp/caller/js/googleCast.js","../../tmp/caller/js/ChannelManager.js","../../tmp/caller/js/Game.js","../../tmp/caller/js/index.js"],"sourcesContent":["// TODO find types\nexport class GoogleCast {\n    constructor() {\n        this.sessions = [];\n        const sessionRequest = new chrome.cast.SessionRequest('2B0E5446');\n        const apiConfig = new chrome.cast.ApiConfig(sessionRequest, this.sessionListener.bind(this), this.receiverListener.bind(this));\n        chrome.cast.initialize(apiConfig, this.onInitSuccess.bind(this), this.onError.bind(this));\n        this.elButtons = document.querySelectorAll('.aCast');\n        this.elButtons.forEach(elButton => elButton.addEventListener('click', this.onCastClick.bind(this)));\n        this.elCastIcons = document.querySelectorAll('.castIcon');\n    }\n    isAvailable() {\n        return this.sessions.length > 0;\n    }\n    set onMessage(fn) {\n        this.onMsgCB = fn;\n    }\n    sendMessage(msg) {\n        this.sessions.forEach((session) => {\n            session.namespaces.forEach(namesp => session.sendMessage(namesp.name, msg));\n        });\n    }\n    sessionListener(session) {\n        this.sessions.push(session);\n        console.log('Cast session initialised');\n        this.elCastIcons.forEach(el => el.textContent = 'cast_connected');\n        session.addUpdateListener(this.onSessionUpdate.bind(this, session));\n        if (!this.onMsgCB) {\n            return;\n        }\n        this.onMsgCB({\n            data: {\n                messageType: 'display_connected',\n                type: 'cast'\n            }\n        });\n    }\n    receiverListener(e) {\n        if (e === chrome.cast.ReceiverAvailability.AVAILABLE) {\n            console.log('cast receivers available');\n            this.elCastIcons.forEach(el => el.removeAttribute('style'));\n        }\n        else if (e === chrome.cast.ReceiverAvailability.UNAVAILABLE) {\n            console.log('cast receivers unavailable');\n            this.elCastIcons.forEach(el => el.setAttribute('style', 'display:none;'));\n        }\n        else {\n            console.log('receiver event', e);\n            this.onMsgCB(e);\n        }\n    }\n    onSessionUpdate(session, msg) {\n        // if session stopped, remove from the sessions list\n        if (session.status === chrome.cast.SessionStatus.STOPPED) {\n            const index = this.sessions.findIndex(ses => ses.sessionId === session.sessionId);\n            this.sessions.splice(index, 1);\n        }\n        if (!this.isAvailable()) {\n            this.elCastIcons.forEach(el => el.textContent = 'cast');\n        }\n    }\n    onInitSuccess() {\n        console.log('cast initialised successfully');\n    }\n    onError() {\n        console.log('cast error', arguments);\n    }\n    onRequestSessionSuccess(session) {\n        if (session) {\n            this.sessionListener(session);\n        }\n        console.log('cast session success', arguments);\n    }\n    onLaunchError() {\n        console.log('cast launch error', arguments);\n    }\n    onCastClick() {\n        // if connected, disconnect\n        if (this.isAvailable()) {\n            this.sessions[0].stop(() => { }, () => { });\n            return;\n        }\n        // otherwise connect\n        chrome.cast.requestSession(this.onRequestSessionSuccess.bind(this), this.onLaunchError.bind(this));\n    }\n}\n","import { GoogleCast } from './googleCast';\nexport class ChannelManager {\n    constructor() {\n        if (window.BroadcastChannel) {\n            this.chanelBroadcast = new window.BroadcastChannel('__BUS_NAME__');\n            this.chanelBroadcast.onmessage = this.onChannelMsg.bind(this, 'broadcast');\n        }\n        window['__onGCastApiAvailable'] = this.onCastAvailable.bind(this);\n    }\n    set onmessage(fn) {\n        this.onMsgCb = fn;\n    }\n    sendMessage(msg) {\n        if (this.chanelBroadcast) {\n            this.chanelBroadcast.postMessage(msg);\n        }\n        if (this.channelCast && this.channelCast.isAvailable()) {\n            this.channelCast.sendMessage(msg);\n        }\n    }\n    onChannelMsg(channel, msg) {\n        this.onMsgCb(Object.assign(msg, {\n            channel\n        }));\n    }\n    onCastAvailable(isAvailable) {\n        if (isAvailable) {\n            this.channelCast = new GoogleCast();\n            this.channelCast.onMessage = this.onChannelMsg.bind(this, 'cast');\n        }\n        else {\n            delete this.channelCast;\n        }\n    }\n}\n","/**\n * Created by steve on 15/11/2016.\n */\n/**\n * Created by steve on 15/11/2016.\n */ export class Game {\n    constructor() {\n        const recoveredValues = window.sessionStorage.getItem('currentGame');\n        const recoveredLastNumber = window.sessionStorage.getItem('lastNumber');\n        this.currentGame = recoveredValues ? JSON.parse(recoveredValues) : [];\n        this.lastNumber = recoveredLastNumber ? parseInt(recoveredLastNumber, 10) : null;\n    }\n    get calledNumbers() {\n        return this.currentGame;\n    }\n    get latestNumber() {\n        return this.lastNumber;\n    }\n    nextNumber() {\n        // check the game isn't over\n        if (this.currentGame.length >= 99) {\n            return -1;\n        }\n        // get the next number which hasn't already been called\n        let number = Game.getNumber();\n        while (this.currentGame.includes(number)) {\n            number = Game.getNumber();\n        }\n        this.currentGame.push(number);\n        this.lastNumber = number;\n        window.sessionStorage.setItem('lastNumber', number.toString());\n        window.sessionStorage.setItem('currentGame', JSON.stringify(this.currentGame));\n        return number;\n    }\n    reset() {\n        this.currentGame = [];\n        window.sessionStorage.removeItem('lastNumber');\n        window.sessionStorage.removeItem('currentGame');\n    }\n    static getNumber() {\n        return Math.floor(Math.random() * 99) + 1;\n    }\n}\n","/**\n * Created by steve on 15/11/2016.\n */\nimport { ChannelManager } from './ChannelManager';\nimport { Game } from './Game';\ndocument.addEventListener('DOMContentLoaded', () => {\n    const channelManager = new ChannelManager();\n    const game = new Game();\n    let displayConnected = false;\n    const elements = {\n        buttons: {\n            callNumber: document.querySelector('#btn-call'),\n            resetGame: document.querySelector('#btn-reset')\n        },\n        display: {\n            lastCalled: document.querySelector('#latest-number'),\n            previousNumbers: document.querySelector('#table-last-called')\n        }\n    };\n    // recover game in case of refresh\n    game.calledNumbers.forEach(number => elements.display.previousNumbers.setCalled(number));\n    elements.display.lastCalled.textContent = game.latestNumber || '-';\n    elements.buttons.callNumber.addEventListener('click', () => {\n        const number = game.nextNumber();\n        // add the number to our current list\n        elements.display.previousNumbers.setCalled(number);\n        elements.display.lastCalled.textContent = number.toString();\n        // send the number to the next tab\n        channelManager.sendMessage({\n            messageType: 'called',\n            number: number\n        });\n    });\n    elements.buttons.resetGame.addEventListener('click', () => {\n        game.reset();\n        elements.display.previousNumbers.reset();\n        elements.display.lastCalled.textContent = '-';\n        channelManager.sendMessage({\n            messageType: 'reset'\n        });\n    });\n    channelManager.onmessage = (e) => {\n        switch (e.data.messageType) {\n            case 'display_connected':\n                displayConnected = true;\n                channelManager.sendMessage({\n                    messageType: 'active_game',\n                    calledNumbers: game.calledNumbers,\n                    latestNumber: game.latestNumber\n                });\n                break;\n            case 'display_disconnected':\n                displayConnected = false;\n                break;\n            default:\n                console.warn('Unknown message type', e.data);\n        }\n    };\n    window.addEventListener('beforeunload', () => {\n        channelManager.sendMessage({\n            messageType: 'caller_disconnected'\n        });\n    });\n    channelManager.sendMessage({\n        messageType: 'caller_connected'\n    });\n});\n"],"names":[],"mappings":";;;AAAA;AACA,AAAO,MAAM,UAAU,CAAC;IACpB,WAAW,GAAG;QACV,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,MAAM,cAAc,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAClE,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/H,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1F,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpG,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;KAC7D;IACD,WAAW,GAAG;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;KACnC;IACD,IAAI,SAAS,CAAC,EAAE,EAAE;QACd,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACrB;IACD,WAAW,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;YAC/B,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;SAC/E,CAAC,CAAC;KACN;IACD,eAAe,CAAC,OAAO,EAAE;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QACxC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,WAAW,GAAG,gBAAgB,CAAC,CAAC;QAClE,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO;SACV;QACD,IAAI,CAAC,OAAO,CAAC;YACT,IAAI,EAAE;gBACF,WAAW,EAAE,mBAAmB;gBAChC,IAAI,EAAE,MAAM;aACf;SACJ,CAAC,CAAC;KACN;IACD,gBAAgB,CAAC,CAAC,EAAE;QAChB,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE;YAClD,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YACxC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/D;aACI,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE;YACzD,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;SAC7E;aACI;YACD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACnB;KACJ;IACD,eAAe,CAAC,OAAO,EAAE,GAAG,EAAE;;QAE1B,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YACtD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,SAAS,KAAK,OAAO,CAAC,SAAS,CAAC,CAAC;YAClF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAClC;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACrB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC;SAC3D;KACJ;IACD,aAAa,GAAG;QACZ,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;KAChD;IACD,OAAO,GAAG;QACN,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;KACxC;IACD,uBAAuB,CAAC,OAAO,EAAE;QAC7B,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SACjC;QACD,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,SAAS,CAAC,CAAC;KAClD;IACD,aAAa,GAAG;QACZ,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;KAC/C;IACD,WAAW,GAAG;;QAEV,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM,GAAG,CAAC,CAAC;YAC5C,OAAO;SACV;;QAED,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACtG;CACJ;;ACpFM,MAAM,cAAc,CAAC;IACxB,WAAW,GAAG;QACV,IAAI,MAAM,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,IAAI,MAAM,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;YACnE,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;SAC9E;QACD,MAAM,CAAC,uBAAuB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACrE;IACD,IAAI,SAAS,CAAC,EAAE,EAAE;QACd,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACrB;IACD,WAAW,CAAC,GAAG,EAAE;QACb,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SACzC;QACD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE;YACpD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SACrC;KACJ;IACD,YAAY,CAAC,OAAO,EAAE,GAAG,EAAE;QACvB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE;YAC5B,OAAO;SACV,CAAC,CAAC,CAAC;KACP;IACD,eAAe,CAAC,WAAW,EAAE;QACzB,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACrE;aACI;YACD,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;KACJ;CACJ;;AClCD;;;;;IAKI,AAAO,MAAM,IAAI,CAAC;IAClB,WAAW,GAAG;QACV,MAAM,eAAe,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACrE,MAAM,mBAAmB,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACxE,IAAI,CAAC,WAAW,GAAG,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;QACtE,IAAI,CAAC,UAAU,GAAG,mBAAmB,GAAG,QAAQ,CAAC,mBAAmB,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC;KACpF;IACD,IAAI,aAAa,GAAG;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;IACD,IAAI,YAAY,GAAG;QACf,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;IACD,UAAU,GAAG;;QAET,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,EAAE,EAAE;YAC/B,OAAO,CAAC,CAAC,CAAC;SACb;;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACtC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;SAC7B;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC/D,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAC/E,OAAO,MAAM,CAAC;KACjB;IACD,KAAK,GAAG;QACJ,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAC/C,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;KACnD;IACD,OAAO,SAAS,GAAG;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;KAC7C;CACJ;;AC1CD;;;AAGA,AACA,AACA,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;IAChD,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;IAC5C,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IACxB,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,MAAM,QAAQ,GAAG;QACb,OAAO,EAAE;YACL,UAAU,EAAE,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC;YAC/C,SAAS,EAAE,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC;SAClD;QACD,OAAO,EAAE;YACL,UAAU,EAAE,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC;YACpD,eAAe,EAAE,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC;SAChE;KACJ,CAAC;;IAEF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IACzF,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,IAAI,GAAG,CAAC;IACnE,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM;QACxD,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;;QAEjC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACnD,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;;QAE5D,cAAc,CAAC,WAAW,CAAC;YACvB,WAAW,EAAE,QAAQ;YACrB,MAAM,EAAE,MAAM;SACjB,CAAC,CAAC;KACN,CAAC,CAAC;IACH,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM;QACvD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QACzC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,GAAG,GAAG,CAAC;QAC9C,cAAc,CAAC,WAAW,CAAC;YACvB,WAAW,EAAE,OAAO;SACvB,CAAC,CAAC;KACN,CAAC,CAAC;IACH,cAAc,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK;QAC9B,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW;YACtB,KAAK,mBAAmB;gBACpB,gBAAgB,GAAG,IAAI,CAAC;gBACxB,cAAc,CAAC,WAAW,CAAC;oBACvB,WAAW,EAAE,aAAa;oBAC1B,aAAa,EAAE,IAAI,CAAC,aAAa;oBACjC,YAAY,EAAE,IAAI,CAAC,YAAY;iBAClC,CAAC,CAAC;gBACH,MAAM;YACV,KAAK,sBAAsB;gBACvB,gBAAgB,GAAG,KAAK,CAAC;gBACzB,MAAM;YACV;gBACI,OAAO,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;SACpD;KACJ,CAAC;IACF,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,MAAM;QAC1C,cAAc,CAAC,WAAW,CAAC;YACvB,WAAW,EAAE,qBAAqB;SACrC,CAAC,CAAC;KACN,CAAC,CAAC;IACH,cAAc,CAAC,WAAW,CAAC;QACvB,WAAW,EAAE,kBAAkB;KAClC,CAAC,CAAC;CACN,CAAC,CAAC;;"}